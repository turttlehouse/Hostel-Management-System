[{"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\index.js":"1","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\App.js":"2","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\store.jsx":"4","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\analysisView.jsx":"5","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\homeView.jsx":"6","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\addStudentView.jsx":"7","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\userEditView.jsx":"8","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\studentDetailsView.jsx":"9","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\attendanceView.jsx":"10","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\profileView.jsx":"11","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\userListView.jsx":"12","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\Authentication Screens\\RegisterView.jsx":"13","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\Authentication Screens\\LoginView.jsx":"14","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\footer.jsx":"15","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\header.jsx":"16","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\reducers\\attendanceReducer.jsx":"17","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\reducers\\studentsReducer.jsx":"18","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\reducers\\userReducers.jsx":"19","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\actions\\studentActions.jsx":"20","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\message.jsx":"21","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\loader.jsx":"22","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\analysisComponent.jsx":"23","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\actions\\attendanceActions.jsx":"24","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\studentTableView.jsx":"25","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\formContainer.jsx":"26","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\paginate.jsx":"27","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\student.jsx":"28","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\actions\\userActions.jsx":"29","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\attendanceTable.jsx":"30","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\searchBox.jsx":"31","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\constants\\studentConstant.jsx":"32","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\constants\\userConstants.jsx":"33","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\constants\\attendanceConstant.jsx":"34","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\attendanceTableComponent.jsx":"35"},{"size":615,"mtime":1718209588963,"results":"36","hashOfConfig":"37"},{"size":2048,"mtime":1718209587941,"results":"38","hashOfConfig":"37"},{"size":375,"mtime":1718209587969,"results":"39","hashOfConfig":"37"},{"size":1821,"mtime":1718209587985,"results":"40","hashOfConfig":"37"},{"size":3855,"mtime":1718209587975,"results":"41","hashOfConfig":"37"},{"size":2856,"mtime":1718209587978,"results":"42","hashOfConfig":"37"},{"size":7377,"mtime":1718209587973,"results":"43","hashOfConfig":"37"},{"size":42409,"mtime":1718209588982,"results":"44","hashOfConfig":"37"},{"size":5926,"mtime":1718209587980,"results":"45","hashOfConfig":"37"},{"size":1156,"mtime":1718209587976,"results":"46","hashOfConfig":"37"},{"size":3748,"mtime":1718209587979,"results":"47","hashOfConfig":"37"},{"size":2821,"mtime":1718209587983,"results":"48","hashOfConfig":"37"},{"size":3252,"mtime":1718209587972,"results":"49","hashOfConfig":"37"},{"size":2221,"mtime":1718209587971,"results":"50","hashOfConfig":"37"},{"size":337,"mtime":1718933711992,"results":"51","hashOfConfig":"37"},{"size":2629,"mtime":1718253248220,"results":"52","hashOfConfig":"37"},{"size":1859,"mtime":1718209587964,"results":"53","hashOfConfig":"37"},{"size":3301,"mtime":1718209587965,"results":"54","hashOfConfig":"37"},{"size":3653,"mtime":1718209587967,"results":"55","hashOfConfig":"37"},{"size":4854,"mtime":1718209587943,"results":"56","hashOfConfig":"37"},{"size":246,"mtime":1718209587952,"results":"57","hashOfConfig":"37"},{"size":407,"mtime":1718209587951,"results":"58","hashOfConfig":"37"},{"size":2725,"mtime":1718209587945,"results":"59","hashOfConfig":"37"},{"size":2562,"mtime":1718209587943,"results":"60","hashOfConfig":"37"},{"size":2478,"mtime":1718209587981,"results":"61","hashOfConfig":"37"},{"size":347,"mtime":1718209587949,"results":"62","hashOfConfig":"37"},{"size":771,"mtime":1718209587953,"results":"63","hashOfConfig":"37"},{"size":893,"mtime":1718209587955,"results":"64","hashOfConfig":"37"},{"size":6763,"mtime":1718209587944,"results":"65","hashOfConfig":"37"},{"size":2158,"mtime":1718209587946,"results":"66","hashOfConfig":"37"},{"size":814,"mtime":1718209587954,"results":"67","hashOfConfig":"37"},{"size":1323,"mtime":1718209587957,"results":"68","hashOfConfig":"37"},{"size":1534,"mtime":1718209587958,"results":"69","hashOfConfig":"37"},{"size":872,"mtime":1718209587956,"results":"70","hashOfConfig":"37"},{"size":3471,"mtime":1718209587947,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"pps4sl",{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"74"},"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\index.js",[],["150","151"],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\App.js",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\store.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\analysisView.jsx",["152","153"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Button, Modal, Form } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {\r\n  deleteAttendanceByDate,\r\n  getAnalysisByDate,\r\n} from \"../actions/attendanceActions\";\r\nimport AnalysisComponent from \"../components/analysisComponent\";\r\nimport Loading from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\n\r\nconst AnalysisView = () => {\r\n  const dispatch = useDispatch();\r\n  const [modal, setModal] = useState(false);\r\n  const [days, setDays] = useState(0);\r\n  const [idList, setIdList] = useState([]);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const attendanceAnalysis = useSelector((state) => state.attendanceAnalysis);\r\n  const { attendance } = attendanceAnalysis;\r\n  const attendanceDelete = useSelector((state) => state.attendanceDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    success: successDelete,\r\n    error: errorDelete,\r\n  } = attendanceDelete;\r\n  useEffect(() => {\r\n    if (attendance) {\r\n      var temp = idList;\r\n      Object.entries(attendance.details).map((at) => {\r\n        temp.push(at[0]);\r\n      });\r\n\r\n      setIdList(temp);\r\n    } else {\r\n      dispatch(getAnalysisByDate(startDate.toString().substring(0, 15)));\r\n    }\r\n  }, [attendance, dispatch]);\r\n\r\n  const changeDate = (date) => {\r\n    dispatch(getAnalysisByDate(date.toString().substring(0, 15)));\r\n    setStartDate(date);\r\n  };\r\n  const showModal = () => {\r\n    setModal(true);\r\n  };\r\n  const closeModal = () => {\r\n    setModal(false);\r\n  };\r\n\r\n  const startDelete = () => {\r\n    setModal(false);\r\n    dispatch(deleteAttendanceByDate(days));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"flex justify-content-between\">\r\n        <Link to=\"/\" className=\"btn btn-light my-3\">\r\n          Go Back\r\n        </Link>\r\n        <div style={{ height: \"40px\", display: \"flex\" }}>\r\n          <Button variant=\"outline-danger\" size=\"sm\" onClick={showModal}>\r\n            Delete Attendance\r\n          </Button>\r\n        </div>\r\n      </Row>\r\n      {loadingDelete && <Loading />}\r\n      {errorDelete && <Message variant=\"success\">{errorDelete}</Message>}\r\n      {successDelete && <Message variant=\"success\">Attendance Deleted</Message>}\r\n\r\n      <Col>\r\n        <Row>\r\n          <Col>\r\n            <Row>Analysis for </Row>\r\n            <strong>\r\n              {startDate.toISOString().toString().substring(0, 10)}\r\n            </strong>\r\n          </Col>\r\n          <Col>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={(date) => changeDate(date)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Modal show={modal} animation={true} onHide={closeModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Enter Number of days before to delete</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form>\r\n              <Form.Group controlId=\"days\">\r\n                <Form.Label>Enter no of days</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Enter days\"\r\n                  value={days}\r\n                  onChange={(e) => setDays(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={closeModal}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"outline-danger\" onClick={startDelete}>\r\n              Delete\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        {<AnalysisComponent />}\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnalysisView;\r\n","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\homeView.jsx",["154"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Student from \"../components/student\";\r\nimport Loading from \"../components/loader.jsx\";\r\nimport Message from \"../components/message.jsx\";\r\nimport { listStudents } from \"../actions/studentActions\";\r\nimport Paginate from \"../components/paginate\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ButtonGroup,\r\n  ToggleButton,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport StudentsTableView from \"./studentTableView\";\r\n\r\nconst HomeView = ({ match, history }) => {\r\n  const [isGrid, setIsGrid] = useState(true);\r\n  const keyword = match.params.keyword;\r\n\r\n  const pageNumber = match.params.pageNumber || 1;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading: userLoading, userInfo } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const studentsList = useSelector((state) => state.studentsList);\r\n  const { loading, error, students, page, pages } = studentsList;\r\n\r\n  useEffect(() => {\r\n    if (!userLoading && !userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    dispatch(listStudents(keyword, pageNumber));\r\n  }, [keyword, pageNumber]);\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <Container>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col xs lg=\"2\"></Col>\r\n            <Col md=\"auto\">\r\n              <ButtonGroup toggle>\r\n                {[\"Grid\", \"Table\"].map((type) => (\r\n                  <ToggleButton\r\n                    key={type}\r\n                    type=\"radio\"\r\n                    variant=\"secondary\"\r\n                    name=\"radio\"\r\n                    value={type}\r\n                    checked={(isGrid ? \"Grid\" : \"Table\") === type}\r\n                    onChange={(e) =>\r\n                      setIsGrid(e.target.value === \"Grid\" ? true : false)\r\n                    }\r\n                  >\r\n                    {type === \"Grid\" ? <> Grid</> : <> Table </>}\r\n                  </ToggleButton>\r\n                ))}\r\n              </ButtonGroup>\r\n            </Col>\r\n            <Col xs lg=\"2\"></Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n\r\n      <h1>Students</h1>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : isGrid ? (\r\n        <>\r\n          <Row>\r\n            {students.map((student) => (\r\n              <Col key={student._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Student stuentDetails={student} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : \"\"}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <StudentsTableView keyword={keyword} pageNumber={pageNumber} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeView;\r\n","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\addStudentView.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\userEditView.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\studentDetailsView.jsx",["155"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Loading from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport {\r\n  getStudentDetails,\r\n  updateStudent,\r\n  deleteStudent,\r\n} from \"../actions/studentActions\";\r\nimport { STUDENT_UPDATE_RESET } from \"../constants/studentConstant\";\r\nconst StudentDetailsView = ({ match, history }) => {\r\n  const [status, setStatus] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const studentDetails = useSelector((state) => state.studentDetails);\r\n  const { loading, error, student } = studentDetails;\r\n  const studentUpdate = useSelector((state) => state.studentUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = studentUpdate;\r\n  const studentDelete = useSelector((state) => state.studentDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = studentDelete;\r\n\r\n  useEffect(() => {\r\n    if (successDelete) {\r\n      history.push(\"/\");\r\n    }\r\n    if (successUpdate) {\r\n      dispatch({ type: STUDENT_UPDATE_RESET });\r\n    }\r\n    if (!student || !student._id || student._id !== match.params.id) {\r\n      dispatch(getStudentDetails(match.params.id));\r\n    }\r\n    if (student && student._id && !status) {\r\n      setStatus(student.status);\r\n    }\r\n  }, [dispatch, match, successUpdate, successDelete]);\r\n\r\n  const navigateToEdit = () => {\r\n    history.push({\r\n      pathname: `/student/edit/${student._id}`,\r\n      state: { studentProps: student },\r\n    });\r\n  };\r\n  const updateStatus = () => {\r\n    student.status = status;\r\n    dispatch(updateStudent(student));\r\n  };\r\n\r\n  const deleteStuden = () => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteStudent(student._id));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading || loadingUpdate || loadingDelete ? (\r\n        <Loading />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n          {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n          {student && (\r\n            <Row>\r\n              <Col md={3}>\r\n                <Image src={student.image} alt={student.name} fluid />\r\n              </Col>\r\n              <Col md={3}>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <h3>{student.name}</h3>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <span>Phone No:{student.contact}</span>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <span>Father Contact:{student.fatherContact}</span>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <span>City:{student.city}</span>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <span>Address:{student.address}</span>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n                <Card>\r\n                  <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Room No:</Col>\r\n                        <Col> {student.roomNo}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Block No:</Col>\r\n                        <Col> {student.blockNo}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Status:</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            size=\"sm\"\r\n                            as=\"select\"\r\n                            value={status}\r\n                            onChange={(e) => setStatus(e.target.value)}\r\n                          >\r\n                            {[\"Hostel\", \"Outside\", \"Home\"].map((x) => (\r\n                              <option key={x} value={x}>\r\n                                {x}\r\n                              </option>\r\n                            ))}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <Button\r\n                        className=\"btn-block\"\r\n                        type=\"button\"\r\n                        onClick={updateStatus}\r\n                      >\r\n                        Update\r\n                      </Button>\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n                </Card>\r\n              </Col>\r\n              <Col>\r\n                <ListGroup variant=\"flush\">\r\n                  <Row>\r\n                    <ListGroup.Item variant=\"secondary\">\r\n                      <Button onClick={navigateToEdit}>\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <Button variant=\"danger\" onClick={deleteStuden}>\r\n                        <i className=\"fas fa-trash\"></i>\r\n                      </Button>\r\n                    </ListGroup.Item>\r\n                  </Row>\r\n                </ListGroup>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentDetailsView;\r\n","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\attendanceView.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\profileView.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\userListView.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\Authentication Screens\\RegisterView.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\Authentication Screens\\LoginView.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\footer.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\header.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\reducers\\attendanceReducer.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\reducers\\studentsReducer.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\reducers\\userReducers.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\actions\\studentActions.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\message.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\loader.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\analysisComponent.jsx",["156"],"import React, { useEffect, useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Loading from \"./loader\";\r\nimport Message from \"./message\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nconst AnalysisComponent = () => {\r\n  const attendanceAnalysis = useSelector((state) => state.attendanceAnalysis);\r\n  const { loading, error, attendance } = attendanceAnalysis;\r\n  const [data, setData] = useState([]);\r\n  const [headers, setHeaders] = useState([]);\r\n  useEffect(() => {\r\n    if (attendance) {\r\n      setHeaders([\r\n        { label: \"Name\", key: \"name\" },\r\n        { label: \"Contact\", key: \"contact\" },\r\n        { label: \"Room No\", key: \"roomNo\" },\r\n        { label: \"Status\", key: \"attendance\" },\r\n      ]);\r\n      var csvMapList = [];\r\n      Object.entries(attendance.details).map((student) => {\r\n        var csvMap = {};\r\n        csvMap[\"name\"] = student[1].name;\r\n        csvMap[\"contact\"] = student[1].contact;\r\n        csvMap[\"roomNo\"] = student[1].roomNo;\r\n        csvMap[\"attendance\"] = attendance.data[student[0]];\r\n        csvMapList.push(csvMap);\r\n      });\r\n\r\n      setData(csvMapList);\r\n    }\r\n  }, [attendance]);\r\n  return (\r\n    <>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          {attendance && (\r\n            <>\r\n              <Table striped bordered hover responsive className=\"table-sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Name</th>\r\n                    <th>Contact No</th>\r\n                    <th>Room No</th>\r\n                    <th>Attendance</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {attendance &&\r\n                    Object.entries(attendance.details).map((student) => {\r\n                      return (\r\n                        <tr key={student[0]}>\r\n                          <th>{student[1].name}</th>\r\n                          <td>{student[1].contact}</td>\r\n                          <td>{student[1].roomNo}</td>\r\n                          <td>{attendance.data[student[0]]}</td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                </tbody>\r\n              </Table>\r\n              <CSVLink\r\n                data={data}\r\n                headers={headers}\r\n                filename={`attendance_${Date()\r\n                  .toString()\r\n                  .substring(0, 15)}.csv`}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Download\r\n              </CSVLink>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnalysisComponent;\r\n","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\actions\\attendanceActions.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\screens\\studentTableView.jsx",["157"],"import React, { useEffect } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/message\";\r\nimport Loader from \"../components/loader\";\r\nimport Paginate from \"../components/paginate\";\r\nimport { listStudents } from \"../actions/studentActions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StudentsTableView = ({ keyword, pageNumber }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const studentsList = useSelector((state) => state.studentsList);\r\n  const { loading, error, students, page, pages } = studentsList;\r\n  useEffect(() => {\r\n    if (!students) {\r\n      dispatch(listStudents(keyword, pageNumber));\r\n    }\r\n  }, [dispatch, keyword, pageNumber]);\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>Stream</th>\r\n                <th>NAME</th>\r\n                <th>STATUS</th>\r\n                <th>CONTACT</th>\r\n                <th>ROOM NO</th>\r\n                <th>CITY</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {students.map((student) => (\r\n                <tr key={student._id}>\r\n                  <td>{student.category}</td>\r\n                  <td>\r\n                    <Link to={`/student/${student._id}`}>{student.name}</Link>\r\n                  </td>\r\n                  <td>\r\n                    <span\r\n                      style={{\r\n                        color:\r\n                          student.status === \"Outside\"\r\n                            ? \"red\"\r\n                            : student.status === \"Home\"\r\n                            ? \"blue\"\r\n                            : \"black\",\r\n                      }}\r\n                    >\r\n                      {student.status}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <a href={`tel:${student.contact}`}>{student.contact}</a>\r\n                  </td>\r\n                  <td>{student.roomNo}</td>\r\n                  <td>{student.city}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentsTableView;\r\n","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\formContainer.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\paginate.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\student.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\actions\\userActions.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\attendanceTable.jsx",["158","159","160"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loading from \"./loader\";\r\nimport Message from \"./message\";\r\nimport AttendanceTableComponent from \"./attendanceTableComponent\";\r\n\r\nconst AttendanceTable = ({ roomNo }) => {\r\n  const dispatch = useDispatch();\r\n  const [attendanceMap, setAttendanceMap] = useState({});\r\n\r\n  const getStudentsByRoomNo = useSelector((state) => state.getStudentsByRoomNo);\r\n  const { loading, error, students, attendance } = getStudentsByRoomNo;\r\n  const attendanceDataEnter = useSelector((state) => state.attendanceDataEnter);\r\n  const {\r\n    loading: loadingAttendance,\r\n    error: errorAttendance,\r\n  } = attendanceDataEnter;\r\n  useEffect(() => {\r\n    if (students) {\r\n      arrangeTable();\r\n    }\r\n  }, [dispatch, attendance, attendanceMap, students]);\r\n\r\n  const arrangeTable = () => {\r\n    if (attendance) {\r\n      var tempMap = attendanceMap;\r\n      students.map((student) => {\r\n        if (attendance.data[student._id]) {\r\n          tempMap[student._id] = attendance.data[student._id];\r\n        } else {\r\n          tempMap[student._id] = \"Hostel\";\r\n        }\r\n      });\r\n      setAttendanceMap(attendanceMap);\r\n    } else {\r\n      students.map((student) => {\r\n        var temp = attendanceMap;\r\n        temp[student._id] = \"Hostel\";\r\n        setAttendanceMap(temp);\r\n      });\r\n    }\r\n    var temp = attendanceMap;\r\n    setAttendanceMap(temp);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading || loadingAttendance ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          {errorAttendance && (\r\n            <Message variant=\"danger\">{errorAttendance}</Message>\r\n          )}\r\n          {students && (\r\n            <>\r\n              <AttendanceTableComponent\r\n                students={students}\r\n                attendanceMap={attendanceMap}\r\n                setAttendanceMap={setAttendanceMap}\r\n                attendance={attendance}\r\n                roomNo={roomNo}\r\n              />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttendanceTable;\r\n","C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\searchBox.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\constants\\studentConstant.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\constants\\userConstants.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\constants\\attendanceConstant.jsx",[],"C:\\Users\\Acer\\Desktop\\Hostel-Management\\frontend\\src\\components\\attendanceTableComponent.jsx",["161"],"import React, { useEffect } from \"react\";\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { postAttendance } from \"../actions/attendanceActions\";\r\nimport { Link } from \"react-router-dom\";\r\nconst AttendanceTableComponent = ({\r\n  students,\r\n  attendanceMap,\r\n  setAttendanceMap,\r\n  attendance,\r\n  roomNo,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {}, [dispatch, attendanceMap]);\r\n  const updateAttendance = () => {\r\n    if (attendance) {\r\n      if (!attendance.roomNo.includes(roomNo)) {\r\n        attendance.roomNo.push(roomNo);\r\n      }\r\n    }\r\n    const roomData = attendance ? attendance.roomNo : roomNo;\r\n    const dataData = attendanceMap;\r\n    const detailsData = attendance ? attendance.details : {};\r\n    students.map((student) => {\r\n      detailsData[student._id] = {\r\n        name: student.name,\r\n        contact: student.contact,\r\n        roomNo: student.roomNo,\r\n      };\r\n    });\r\n\r\n    dispatch(\r\n      postAttendance({\r\n        roomNo: roomData,\r\n        details: detailsData,\r\n        data: dataData,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <Table striped bordered hover responsive className=\"table-sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>NAME</th>\r\n            <th>Attendance</th>\r\n            <th>STATUS</th>\r\n            <th>CONTACT</th>\r\n            <th>CITY</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {students &&\r\n            students.map((student) => (\r\n              <>\r\n                <tr key={student._id}>\r\n                  <td>\r\n                    <Link to={`/student/${student._id}`}>{student.name}</Link>\r\n                  </td>\r\n                  <td>\r\n                    <Form>\r\n                      <Form.Group controlId=\"status\">\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          size=\"sm\"\r\n                          defaultValue={attendanceMap[student._id]}\r\n                          onChange={(e) => {\r\n                            var tempMap = attendanceMap;\r\n                            tempMap[student._id] = e.target.value;\r\n                            setAttendanceMap(tempMap);\r\n                          }}\r\n                        >\r\n                          <option>Hostel</option>\r\n                          <option>Home</option>\r\n                          <option>outside</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                    </Form>\r\n                  </td>\r\n                  <td>\r\n                    <span\r\n                      style={{\r\n                        color:\r\n                          student.status === \"Outside\"\r\n                            ? \"red\"\r\n                            : student.status === \"Home\"\r\n                            ? \"blue\"\r\n                            : \"black\",\r\n                      }}\r\n                    >\r\n                      {student.status}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <a href={`tel:${student.contact}`}>{student.contact}</a>\r\n                  </td>\r\n                  <td>{student.city}</td>\r\n                </tr>\r\n              </>\r\n            ))}\r\n        </tbody>\r\n      </Table>\r\n      <Button variant=\"success\" onClick={updateAttendance}>\r\n        Update Attendance\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttendanceTableComponent;\r\n",{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":32,"column":51,"nodeType":"168","messageId":"169","endLine":32,"endColumn":53},{"ruleId":"170","severity":1,"message":"171","line":40,"column":6,"nodeType":"172","endLine":40,"endColumn":28,"suggestions":"173"},{"ruleId":"170","severity":1,"message":"174","line":35,"column":6,"nodeType":"172","endLine":35,"endColumn":27,"suggestions":"175"},{"ruleId":"170","severity":1,"message":"176","line":52,"column":6,"nodeType":"172","endLine":52,"endColumn":53,"suggestions":"177"},{"ruleId":"166","severity":1,"message":"167","line":22,"column":56,"nodeType":"168","messageId":"169","endLine":22,"endColumn":58},{"ruleId":"170","severity":1,"message":"178","line":19,"column":6,"nodeType":"172","endLine":19,"endColumn":37,"suggestions":"179"},{"ruleId":"170","severity":1,"message":"180","line":22,"column":6,"nodeType":"172","endLine":22,"endColumn":53,"suggestions":"181"},{"ruleId":"166","severity":1,"message":"167","line":27,"column":30,"nodeType":"168","messageId":"169","endLine":27,"endColumn":32},{"ruleId":"166","severity":1,"message":"167","line":36,"column":30,"nodeType":"168","messageId":"169","endLine":36,"endColumn":32},{"ruleId":"166","severity":1,"message":"167","line":24,"column":28,"nodeType":"168","messageId":"169","endLine":24,"endColumn":30},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'idList' and 'startDate'. Either include them or remove the dependency array.","ArrayExpression",["184"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', 'userInfo', and 'userLoading'. Either include them or remove the dependency array.",["185"],"React Hook useEffect has missing dependencies: 'history', 'status', and 'student'. Either include them or remove the dependency array.",["186"],"React Hook useEffect has a missing dependency: 'students'. Either include it or remove the dependency array.",["187"],"React Hook useEffect has a missing dependency: 'arrangeTable'. Either include it or remove the dependency array.",["188"],"no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [attendance, dispatch, idList, startDate]",{"range":"199","text":"200"},"Update the dependencies array to be: [dispatch, history, keyword, pageNumber, userInfo, userLoading]",{"range":"201","text":"202"},"Update the dependencies array to be: [dispatch, match, successUpdate, successDelete, student, status, history]",{"range":"203","text":"204"},"Update the dependencies array to be: [dispatch, keyword, pageNumber, students]",{"range":"205","text":"206"},"Update the dependencies array to be: [dispatch, attendance, attendanceMap, students, arrangeTable]",{"range":"207","text":"208"},[1441,1463],"[attendance, dispatch, idList, startDate]",[1150,1171],"[dispatch, history, keyword, pageNumber, userInfo, userLoading]",[1545,1592],"[dispatch, match, successUpdate, successDelete, student, status, history]",[720,751],"[dispatch, keyword, pageNumber, students]",[801,848],"[dispatch, attendance, attendanceMap, students, arrangeTable]"]